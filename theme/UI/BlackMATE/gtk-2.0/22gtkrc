#########################################
#	MentaBlack			#
#					#
# Created by Wolfgang Ulbrich		#
# (aka Nice&Gently aka raveit65)				#
#					#
# chat-to-me@raveit.de			#
#					#
# Based on Murrine			#
#########################################
#modified by Tecan
# MateDarkThemeV2

#maybe find an entry fix for the pixmaps seemd to only work on darkmate

#INSTRUCTIONS
#copy this into the gtk2 folder overtop of the existing ~/.themes/blackmate/gtk2/gtkrc file if you already have one

gtk_color_scheme = "base_color:#5F5F5F\nfg_color:#86D3FF\nbg_color:#353535\ntext_color:#49A7E3\nselected_bg_color:#5EFF00\nselected_fg_color:#01009F\nbg_active_color:#366669\ntooltip_fg_color:#01009F\ntooltip_bg_color:#11ff91\nscroll_slider:#3b3b3b"

#gtk_color_scheme = "bg_color:#3b3b3e\nbg_active_color:#666669\nscroll_slider:#3b3b3b"

gtk-auto-mnemonics = 1 # press alt for underline


style "murrine-default"
{
	GtkScale	::slider-length		= 28
	GtkScale	::trough-side-details	= 1  # 0 = thin slider, >0 = thick slider

	GtkButton	::child-displacement-x	= 0
	GtkButton	::child-displacement-y	= 0
	GtkButton	::default-border	= { 0, 0, 0, 0 }

	GtkExpander	::expander_size		= 16	# expander arrow size

	GtkMenuItem	:: arrow-scaling	= 0.7	# scale of menu arrow
	#GtkMenuItem	:: horizontal-padding	= 6	# padding to left and
							# right of the menu item;
							# is also related to
							# panel

	# these remove bar separators
	GtkMenuBar	::shadow_type		= GTK_SHADOW_NONE
	#GtkToolbar	::shadow_type		= GTK_SHADOW_NONE

	GtkPaned	::handle_size		= 6

	GtkRange	::trough_border		= 0
	#GtkRange	::slider_width		= 15
	GtkRange	::trough-under-steppers	= 0	# round scroll bar
	#GtkRange	::stepper_size		= 15

	GtkScrollbar	::min_slider_length	= 36
	GtkScrollbar	::activate-slider	= 1
	GtkCheckButton	::indicator_size	= 14
	GtkMenuBar	::internal-padding	= 0
	GtkTreeView	::expander_size		= 14
	#GtkTreeView	::vertical-separator	= 0
	#GtkTreeView	::indent-expanders	= 1

	# GtkToolbar	::button-relief     = GTK_RELIEF_NORMAL
	# GtkScrollbar	::has-secondary-forward-stepper = 1
	# GtkScrollbar	::has-secondary-backward-stepper = 1

	xthickness = 1
	ythickness = 1


#@tooltip_bg_color

#doesnt work
#GtkCTree	::odd_row_color		= shade (0.85, @base_color)
#GtkCTree	::odd_row_color		= shade (0.85, @base_color)
#GtkList	::odd_row_color		= shade (0.85, @base_color)
#GtkList	::odd_row_color		= shade (0.85, @base_color)

WnckTasklist::fade-overlay-rect = 0
	GtkEntry::progress-border = {2, 2, 2, 2}
	# A workaround for gecko (and possibly other appliations):
	GtkEntry::honors-transparent-bg-hint = 1

	GtkWidget	::link-color		= "#2EB8E6" #"#9499FF"
	GtkWidget	::visited-link-color	= "#ff80ff"#"#FF6666" #"#ff80ff"

	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	fg[ACTIVE]        = @fg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)
	text[ACTIVE]      = @selected_fg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.55, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color
	base[ACTIVE]      = shade (0.59, @selected_bg_color)

#	GtkTreeView	::even_row_color	= shade (1.5,@bg_color)#@bg_color # this one effects sidebox  s
#"#444444"
#	GtkTreeView	::odd_row_color		= shade (2.5,@bg_color) #@base_color#shade (1.2,@base_color) #"#414141")
    engine "murrine" 
    {
	#rgba = FALSE
	focus_color = "#4d4d4d"
	glazestyle = 4
	#contrast = 0.5
	highlight_shade = 1.0
	glow_shade = 1.0
	gradient_shades     = {1.06, 1.06, 0.94, 0.94}
	arrowstyle = 1		# triangular arrows
	menustyle = 0		# without vertical bar
	menubaritemstyle = 0	# 0 = menuitem look, 1 = button look
	menubarstyle = 2	# 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
	menuitemstyle = 0	# 0 = flat, 1 = glassy, 2 = striped
	toolbarstyle = 1	# 0 = flat, 1 = glassy, 2 = gradient
        roundness = 3
	separatorstyle = 1	# smooth separator
	sliderstyle = 1		# handles
	border_shades = { 1.3, 1.0 }	# gradient on entry borders
	prelight_shade = 0.95  # shade level for scrollbar's slider, comboboxstyle, and prelight state with gradient_colors
	#spinbuttonstyle = 1		# with separator
	trough_shades = { 0.88, 2.0 }	# gradient on trough of GtkScrollbar and GtkProgressbar
	colorize_scrollbar  = FALSE
	scrollbarstyle = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal
	stepperstyle = 1     # 0 = standard, 1 = integrated stepper handles, 2 = squared steppers with round slider
	expanderstyle = 2		# expander button with +/-
  }
}





########################################## MENU
style "menu"
{
	bg[NORMAL]   = shade (0.9, "#666669")
	fg[NORMAL]   =  "#c1c1c1" # mate panel menu item colors
	text[NORMAL] =  "#901090"

	engine "pixmap" # just for similarity to the GTK3 theme
	{
		image
		{
			function	= BOX
			file		= "assets/bg.png"
			stretch		= TRUE
		}
	}
}

style "menuitem"
{
	fg[PRELIGHT]   = "#3FB2E3"  # start menuitems text color
	bg[SELECTED]   = shade (1.08, @base_color)
	fg[INSENSITIVE]   = "#d1d1d5" #shade (1.08, "#666669")
#	fg[PRELIGHT]   = "#000000"
	text[PRELIGHT] = "#ffffff"
#	bg[SELECTED]   = shade (4.2, "#3b3b3e")

	xthickness = 2
	ythickness = 3

	engine "murrine" 
	{
		#rgba = TRUE
		menuitemstyle = 1
		border_shades = {0.8, 0.3}
		glow_shade = 2.0
		gradient_shades = {1.0, 0.9, 0.6, 0.4}
	}
}



style "murrine-menubar" 	#color of the menubar
{
	xthickness = 3
	ythickness = 0
	fg[NORMAL]     = "#ffffff"  #text inside the menu's ?
	fg[SELECTED] = "#707020"#does nothing
	#text[NORMAL] = "#000000"
	text[SELECTED] = "#ff9fff"#does nothing
	bg[NORMAL] = "#111111"  #menubar background
	bg[SELECTED]   = "#fffff1" #shade (1.2, "#666669")
	engine "murrine"
	{
		gradient_shades = {0.6, 1.0, 1.32, 1.73} 
		#contrast = 0.5
	}
}

style "menubar-menuitem" #text in the menu
{
	fg[NORMAL]     = "#7CaD80"#"#ffffff"  # text color in the menus
	fg[PRELIGHT]   = "#ffffff"	# selected menu item color
	fg[SELECTED]     = "#888844"  # text color in the menus
	bg[SELECTED]   = shade (2.2, @bg_color) #$
	#base[NORMAL] = "#000000"
	xthickness = 2
	ythickness = 3

	engine "murrine" 
	{
		#rgba = TRUE
		menuitemstyle = 0
		border_shades = {1.3, 1.0}
		glow_shade = 2.0
		gradient_shades = {1.0, 1.0, 0.77, 0.77}
	}
}

########################################## -MENU
style "misc-sep"
{
	xthickness = 2
	ythickness = 2

	engine "murrine"
	{
		separatorstyle = 1
	}
}

style "murrine-button"
{
	#xthickness = 3
	#ythickness = 3

	bg[NORMAL]      = shade (0.5, "#3b3b3e") #1.0
	bg[PRELIGHT]    = shade (1.0, "#3b3b3e")
	#bg[SELECTED]    = shade (1.0, "#3b3b3e")
	bg[ACTIVE]      = shade (0.9, "#3b3b3e")
	bg[INSENSITIVE] = "#3b3b3e"

	fg[ACTIVE]      = "#ffffff"
	fg[PRELIGHT]    = "#ffffff"

	engine "murrine"
	{
		glow_shade = 1.20
		lightborder_shade = 1.06
		gradient_shades = {3.3, 1.0, 0.6, 0.5}
		contrast = 0.8
	}
}

style "murrine-togglebutton"
{
	fg[NORMAL]   = "#c1c1c1" #the mate-panel text color
	fg[ACTIVE]   = "#000000"
	fg[PRELIGHT]   = "#ffffff"
	bg[ACTIVE]   = shade (0.68, "#666669")
	bg[PRELIGHT] = shade (0.68, "#666669")
	engine "murrine"
	{
		gradient_shades = {3.0, 1.0, 0.6, 0.5}
	}
}



style "murrine-toolbar"#forward and back buttons
{
	xthickness = 3
	#ythickness = 0
	#bg[NORMAL] = "#3b3b3e"
	engine "murrine"
	{
		gradient_shades = {0.5, 1.20, 1.20, 1.0}  #kinda looked ugly
		contrast = 0.0
	}
}

style "murrine-progressbar"
{
	xthickness = 0
	ythickness = 0
	bg[SELECTED] = shade (0.6, @selected_fg_color)	# sets the progressbar color

	engine "murrine" 
	{
		glazestyle = 1
		highlight_shade = 1.1
		glow_shade = 2.0
		gradient_shades = {1.4, 1.0, 1.0, 1.4}
		progressbarstyle = 0	# 0 = nothing, 1 = striped, 2 = cells
        	contrast = 1.130 # Darken unfilled progressbar background
        	roundness = 12
		#animation = TRUE
    	}
}

style "murrine-statusbar" {
	xthickness = 0
	engine "pixmap"
	{
	    image
	    {
		function		= RESIZE_GRIP
		recolorable		= TRUE
		state			= NORMAL
		detail			= "statusbar"
		overlay_file	= "assets/resize-grip.png"
		overlay_border	= {0,0,0,0 }
		overlay_stretch	= FALSE
	    }
	}
}

style "murrine-scale"
{
	bg[NORMAL]      = shade (1.95, "#3b3b3e")
	bg[PRELIGHT]    = shade (5.1, "#3b3b3e")
	#bg[INSENSITIVE] = shade (0.19, "#3b3b3e") # while clicked

	engine "murrine"
	{
		gradient_shades     = {1.2,1.0,1.0,0.9}
		sliderstyle = 1  # 0 = nothing added, 1 = handles
		contrast = 1.130
		glazestyle = 0  # 0 = flat, 1 = curved, 2 = concave, 3 = top-curved, 4 = beryl
		glow_shade = 1.14  # sets glow amount for buttons or widgets
		glowstyle = 2   # 0=top, 1=bottom, 2=top and bottom, 3=center (vertical), 4=center (horizontal)  
		highlight_shade = 3.02  # set highlight amount for buttons or widgets
		roundness = 6
	}
}


################################	SCROLLBAR
style "scrollbar"
{
	GtkScrollbar::slider-width = 11


	bg[NORMAL]      = "#BC3F18"#shade (2.5, "#3b3b3b")
	bg[PRELIGHT]    = "#409090"#shade (2.8, "#3b3b3b")
	bg[ACTIVE]      = shade (4.0, "#309090")
	bg[INSENSITIVE]	= "#447744"#shade (1.5, "#3b3b3b")
	fg[NORMAL] = "#309090" #nice bar
	engine "murrine"
	{
		#rgba = FALSE
		border_shades = {0.3, 0.8} # draw a gradient on the border.
		border_colors = { "#3b3b3e", "#000000" }
		#contrast = 1.0
		glow_shade = 1.14   # sets glow amount for buttons or widgets
		glowstyle = 0    # 0=top, 1=bottom, 2=top and bottom, 3=center (vertical), 4=center (horizontal) 
		highlight_shade = 1.02  # set highlight amount for buttons or widgets
		lightborder_shade = 1.2   # sets lightborder amount for buttons or widgets
		gradient_shades = {0.34, 0.6, 0.6, 0.34}
		roundness = 8
		trough_shades = {1.0, 1.0} #{0.8, 2.0}
		contrast = 0.0
	}
}

style "hscrollbar"{}

style "vscrollbar"{}
################################	-SCROLLBAR



style "murrine-radiocheck"
{
	bg[SELECTED] = shade (1.3, "#3b3b3e")
	bg[PRELIGHT] = shade (1.44, "#3b3b3e")
	bg[ACTIVE]   = shade (0.2, "#3b3b3e")  # for Synaptic
	fg[ACTIVE]   = "#ffffff"  # for Synaptic
	fg[PRELIGHT] = "#ffffff"  # for Synaptic
	text[NORMAL] = "#ffffff"

	engine "murrine"
	{
		#glow_shade = 2.0
		#gradient_shades = {1.2, 1.2, 0.7, 0.7}  # affects Synaptic buttons!
	}
}

style "murrine-handle"
{
	engine "murrine"
	{
		# The gradient shades should be the same as for the toolbar
		gradient_shades = {0.6, 1.0, 1.32, 1.73}
		contrast = 0.0
	}
}
style "murrine-wide"
{
#bg[NORMAL] = "#309090" #teal boarder around system monitor seems like
	xthickness = 2
	ythickness = 2
}

style "metacity-frame"
{
	bg[SELECTED] = "#16AB19"
}

style "murrine-tasklist"
{
	xthickness = 5
	ythickness = 3
}

style "murrine-tooltips"
{
	xthickness = 4
	ythickness = 4
	bg[NORMAL] = "#000000"
}



################################################# PANEL



style "misc-panel"		# panel for pannel buttons
{
	engine "murrine"
	{
		rgba = FALSE
		roundness=3
	}
			#menu button color on the task panel mate-panel
	#not working these
	bg[ACTIVE]   = shade (110.178, @base_color)  # #active bg color
	fg[ACTIVE]   = "#4fff8f"#the selected button text color
	#text[NORMAL] 	= "#009910"  #effects things like the background
	#text[SELECTED] = "#009910"  #effects things like the background 
	bg[NORMAL]  	= shade (1.7, "#3333ff")  # for the (dark) Ambiance 		background ?? #should be white now
	fg[NORMAL]		= shade (3.1, @bg_color) # text of the task panel items in the mate menu
	bg[PRELIGHT]	= shade (0.9, @bg_color) # for the mate panel buttons hover
	fg[PRELIGHT] = shade (3.4, @bg_color)  # color of the hoverd task panel
	#not working bg[SELECTED]	= shade (11.2, @bg_color)  # to be compatible with menus
	#noeffect fg[SELECTED]	= shade (0.2, @bg_color)	
	#	font_name = "Bitstream Charter Bold 9"
	xthickness = 2
	ythickness = 2
}


style "task-panel" = "misc-panel"  #task panel mate bar
{
	bg[ACTIVE]   = shade (2.0 , @base_color)  # #active bg color
	fg[ACTIVE]   = shade (0.15, @text_color)#"#4fff8f"#the selected button text color
	bg[NORMAL]  	= shade (1.7, "#3333ff")  # for the (dark) Ambiance 		background ?? #should be white now
	fg[NORMAL]		= shade (6.0, @bg_color) # text of the task panel items 
}


# syncronize panel menus
style "applet"
{
	bg[NORMAL]   = shade (0.7, "#4D4D4D")  # for the (dark) Ambiance background
	bg[ACTIVE]   = shade (0.78, @base_color)  # to be compatible with menus
	fg[ACTIVE]   = "#000000"#the selected button text color
base[ACTIVE]   = "#900000" #testing
	bg[PRELIGHT] = shade (0.68, "#666669") #for the (dark) Ambiance background
	fg[PRELIGHT] = shade (3.78, @base_color) # prelight text over button hover TIMEPANEL  on mate panel
#base[NORMAL] = "#ffffff" #testing
#fg[SELECTED] = "#ffffff"	#testing

}

style "view"
{
	# It's better not to have too bright text views.
	#base[NORMAL] = "#ECECEC"
	#text[NORMAL] = "#000000"
}

style "entry"
{
	base[NORMAL] = "#424245"
	fg[INSENSITIVE] = "#5E5E5E"
	text[NORMAL] = "#c1c1c1"#entry box text color
	xthickness = 0
	ythickness = 0
	GtkEntry::inner-border = {4, 4, 4, 4}
	GtkEntry::state-hint = 1

	engine "pixmap" # just for similarity to the GTK3 theme
	{
		image
		{
			state           = NORMAL
			function	= FLAT_BOX
			file		= "assets/bg-entry.png"
			border          = {3, 3, 3, 3}
			stretch		= TRUE
		}
		image
		{
			state           = INSENSITIVE
			function	= FLAT_BOX
		}
		image
		{
			#state           = NORMAL
			function	= FLAT_BOX
			file		= "assets/bg-entry.png"
			border          = {3, 3, 3, 3}
			stretch		= TRUE
			overlay_file	= "assets/border-entry.png"
			overlay_border	= {3, 3, 3, 3}
			overlay_stretch	= TRUE
		}
	}
}

style "combobox" 
{
	ythickness = 3
	xthickness = 3
	GtkEntry::state-hint = 0

	engine "murrine"
	{
		#rgba = FALSE
		border_shades = {1.5, 1.2}
		focus_color = shade (1.48, "#3b3b3e")
		contrast = 0.8
	}
}

style "comboboxentry" 
{
	ythickness = 3
	xthickness = 3

	engine "murrine"
	{
		#rgba = FALSE
		border_shades = {1.5, 1.2}
		focus_color = shade (1.48, "#3b3b3e")
		contrast = 0.8
	}
}

style "spinbutton"
{
	base[NORMAL] = "#424245"
	fg[INSENSITIVE] = "#666666"
	xthickness = 4
	ythickness = 3
	GtkEntry::inner-border = {2, 2, 2, 2}
	GtkEntry::state-hint = 0

	engine "murrine"
	{
		gradient_shades = {2.5, 1.5, 0.8, 0.4}
		border_shades = {2.6, 0.9}
		focus_color = "#3b3b3e"
		contrast = 0.8
	}
}

style "murrine-notebook-bg" {

	#base[NORMAL]   = "#1099C2"
	bg[INSENSITIVE] = shade (100.1, @bg_color)
	#bg[ACTIVE]   = "#1099C2"   #unactive tabs background
 # selected tab
	fg[NORMAL] = shade (1.3, @fg_color)
	bg[NORMAL] = shade (1.5, @bg_color)
 # unselected tab
	fg[ACTIVE] =  shade (0.9, @fg_color)#mix (2.8, @fg_color, shade (4.8, @bg_color)) #codeblocks tabs
	bg[ACTIVE] = shade (1.0, @bg_color)

#testing
#fg[INSENSITIVE] = shade (0.77, @bg_color) #mix (1.8, @fg_color, shade (5.97, @bg_color)) #codeblocks tabs
	#bg[INSENSITIVE] = shade (4.77, @bg_color) # unselected tab

}

style "murrine-notebook" = "murrine-notebook-bg" {

	#text[ACTIVE] = "#ffff9f" 
	#text[INSENSITIVE] = "#00009f" 
	#text[PRELIGHT] = "#ffff9f" 
	#text[NORMAL]   = "#15f2ef" 
	#bg[SELECTED] = "#1fff9f" 
	#bg[NORMAL] = "#1fff9f"  #wx tab panel boarder and panel color
	xthickness = 2 # Width of tabs and notebook borders.
	ythickness = 1 # Height of tabs and notebook borders.

	engine "murrine" {
		#contrast		= .8
		#gradient_shades		= {1.28,1.28,0.87,0.87}
		#focusstyle		= 2
		#lightborder_shade	= 1.16
		#roundness		= 4
		glazestyle = 1
		highlight_shade = 1.0
        	glow_shade = 2.0
        	gradient_shades = {2.5, 1.5, 1.0, 1.0}
		roundness = 5
		#contrast = 1.1
		focusstyle = 0
	}
}



style "treeview-header"
{
fg[NORMAL] 		= shade (1.10, @bg_color) 
bg[NORMAL] = shade (1.10, @bg_color) 
bg[ACTIVE] 		= shade (1.1610, @bg_color) # header bg color
 
fg[PRELIGHT]    = shade (1.0, @selected_fg_color)
bg[PRELIGHT]    = shade (1.5, @bg_color)

	GtkTreeView	::even_row_color	= shade (1.4,@bg_color) #this one controls the sidebar set it a little different for the panel offset color
	GtkTreeView	::odd_row_color		= shade (1.6,@bg_color)

	xthickness = 2
	ythickness = 1

	engine "murrine"
	{
	#	hint = "treeview-header"
		contrast = 0.8
	}
}

style "treeview"   {  #= "treeview-header"
 #not working
#base[NORMAL] 		= shade (14.610, @selected_bg_color) # header text color 
#fg[NORMAL] = shade (110.10, @bg_color)  #not working
fg[NORMAL] 		= shade (0.80, @text_color) 
bg[NORMAL] 		= shade (0.80, @text_color) 
fg[PRELIGHT]    = shade (1.50, @selected_fg_color)
bg[PRELIGHT]    = shade (0.70, @selected_bg_color) #@bg_color
	xthickness = 2
	ythickness = 1

	engine "murrine" {
		contrast = 0.8
	}

}



style "info"
{
	fg[NORMAL] = "#667777"
}

############################################# FIXUPS

style "pixmap-sidebar-handle-left" {
	GtkPaned::handle-size = 1

	engine "pixmap" {
		image { function = HANDLE file = "/widgets/Others/handle.png" stretch = TRUE border = { 0, 0, 0, 0 } }
	}
}

style "chrome-gtk-frame"
{
	ChromeGtkFrame::frame-color = "#000000"
	ChromeGtkFrame::inactive-frame-color = "#353538"

	ChromeGtkFrame::frame-gradient-size = 120
	ChromeGtkFrame::frame-gradient-color = "#444447"

	ChromeGtkFrame::scrollbar-trough-color = "#ffffff"
	ChromeGtkFrame::scrollbar-slider-prelight-color = "#C5C5C5"  #"#666669"
	ChromeGtkFrame::scrollbar-slider-normal-color = "#B3B3B3"
}

class "ChromeGtkFrame" style "chrome-gtk-frame"

#fucks with stuff mainly the main panel colors and treeview headers . but could be the key to getting xchat panel colors working
style "murrine-sidebar" {
	xthickness = 0
	ythickness = 0

	base[NORMAL]	= "#6fff7f"# @bg_color
	bg[NORMAL]	= "#6fff7f"# @bg_color
	text[NORMAL]	="#6fff7f"#  @text_color

	font_name	= "Regular"

	GtkTreeView::odd_row_color	= "#6fff7f"#@bg_color
	GtkTreeView::even_row_color	= @bg_color

	engine "murrine" { listviewstyle = 0 }
}
#think its fixed now seems to have effect on selection


###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# Murrine default style is applied to every widget.
class "GtkWidget"	style "murrine-default"

# Increase the x/ythickness in some widgets.
class "GtkFrame"	style "murrine-wide"
class "MetaFrames"	style "metacity-frame"
class "GtkWindow"	style "metacity-frame"
class "Panel"					style "misc-panel"
class "*Separator*"				style "misc-sep"
# syncronize panel menus
widget_class "*MatePanelAppletFrameDBus*" style "applet"
widget "*PanelApplet*"				style "applet"
# This is suitable for dark panels:
widget_class "*PanelWidget*"			style "misc-panel"
widget "*fast-user-switch-applet*"		style "misc-panel"
class "GtkSeparator"	style "murrine-wide"
class "GtkCalendar"	style "murrine-wide"
class "GtkInfoBar"	style "murrine-default"
class "GtkIconView"	style "murrine-default"

class "GtkProgressBar"	style "murrine-progressbar"
class "GtkScale"	style "murrine-scale"
class "GtkHandleBox"	style "murrine-handle"
class "GtkRange"	style "murrine-wide"
class "GtkEntry"	style "entry"
class "GtkToolbar"	style "murrine-toolbar"
class "GtkMenuBar"	style "murrine-menubar"
class "GtkNotebook"	style "murrine-notebook"
class "GtkScrollbar"	style "scrollbar"
class "GtkVScrollbar"	style "vscrollbar"
class "GtkHScrollbar"	style "hscrollbar"
class "GtkRadioButton"	style:highest "murrine-radiocheck"	
class "GtkCheckButton"	style:highest "murrine-radiocheck"
class "GtkScale" style "murrine-scale"
class "GtkVScale" style "murrine-scale"
class "GtkHScale" style "murrine-scale"

widget "*SidebarHandleLeft"	style "pixmap-sidebar-handle-left"
widget "*SidebarContent"	style "murrine-sidebar"
# enable any of these then your nice treeview header color background images dissapear

#widget_class "*<GtkSeparatorMenuItem>*"		style "murrine_separator_menu_item"

 #General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class "*<GtkNotebook>" style "murrine-notebook"
widget_class "*<GtkNotebook>*" style "murrine-notebook" # messes with scrollbar dont use anyway
widget_class "*<GtkNotebook>*<GtkEventBox>" style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLayout>" style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkViewport>" style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkScrolledWindow>" style "murrine-notebook"


widget_class "*<GtkMenu>*"			style "menu"
widget_class "*<GtkSpinButton>*"		style "spinbutton"
widget_class "*.<GtkTextView>*"			style "view"
widget_class "*<GtkMenuItem>*"			style "menuitem"
widget_class "*<GtkMenuBar>.<GtkMenuItem>*"	style "menubar-menuitem"
widget_class "*<GtkStatusbar>*"	style "murrine-statusbar"
widget_class "*<GtkInfoBar>*"			style "info"

########################################
# Tooltips
###########
widget_class "*.tooltips.*.GtkToggleButton"	style "murrine-tasklist"
widget "gtk-tooltips"				style "murrine-tooltips"
widget "gtk-tooltip"				style "murrine-tooltips"



########################################
# panel
########

# syncronize panel menus
widget_class "*MatePanelAppletFrameDBus*" style "applet"
widget "*PanelApplet*"				style "applet"
# This is suitable for dark panels:
widget_class "*PanelWidget*"			style "misc-panel"
widget "*fast-user-switch-applet*"		style "misc-panel"
#widget "*CPUFreqApplet*"          style "misc-panel" # workaround for CpuFreq Applet
class "PanelApp*"                 style "misc-panel"
class "PanelToplevel*"            style "misc-panel"
#widget_class "*Mail*"             style "misc-panel"
#widget_class "*notif*"            style "misc-panel"

#widget_class "*?anel*utton"       style "panel_task_button" # causing problems to monodevelop
widget "*task*"                   style "task-panel" # mate panel too
widget "*.tasklist-button"        style "task-panel"
widget "*PanelApplet*TaskTitle*"  style "task-panel"

########################################
# Combo
#########
widget_class "*<GtkCombo>*"			style:highest "comboboxentry"
widget_class "*<GtkComboBox>*"			style "combobox"
widget_class "*<GtkComboBoxEntry>*"		style:highest "comboboxentry"
########################################
# Buttons
##########
# All buttons:
widget_class "*<GtkButton>"			style "murrine-button"
# High contrast for toggle buttons and their labels:
widget_class "*.<GtkToggleButton>*"		style "murrine-togglebutton"
# No high contrast for combo boxes, their labels and their arrows:
widget_class "*<GtkComboBox>.*"			style "murrine-button"
# No high contrast for toggle buttons, their labels and arrows on toolbars:
widget_class "*<GtkToolbar>.*"			style "murrine-button"
widget_class "*.<GtkRadioButton>.<GtkLabel>"	style "murrine-radiocheck"
widget_class "*.<GtkCheckButton>.<GtkLabel>"	style "murrine-radiocheck"
########################################

widget_class "*.<GtkTreeView>"	style "treeview"
widget_class "*.<GtkTreeView>.<GtkButton>"	style "treeview-header"

widget_class "*.<GtkCTree>.<GtkButton>"		style "treeview-header"
widget_class "*.<GtkList>.<GtkButton>"		style "treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"		style "treeview-header"
widget_class "*.<GtkList>"		style "treeview"
widget_class "*.<GtkCList>"		style "treeview"

# Workarounds for Evolution (taken from Ambiance)
widget_class "*.ETable.ECanvas"			style "treeview-header"
widget_class "*.ETree.ECanvas"			style "treeview-header"


# Wrokaroudn style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {

	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

widget_class "*.<GtkComboBox>.<GtkCellView>" style "text_is_fg_color_workaround"
# This is the part of the workaround that fixes the menus
widget "*.gtk-combobox-popup-menu.*" style "menuitem_text_is_fg_color_workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
widget_class "*<GtkListItem>*" style "fg_is_text_color_workaround"
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class "*<GtkCList>" style "fg_is_text_color_workaround"
# Caja when renaming files, and maybe other places.
widget_class "*<EelEditableLabel>" style "fg_is_text_color_workaround"


# Thickness for indicator menu items
widget "*IdoEntryMenuItem*" style "murrine-wide"

# XFCE desktop icon text looks weird when murrine textstyle is on.
style "xfdesktop-icon-view" { engine "murrine" { textstyle = 0 }}
widget_class "*XfdesktopIconView*" style "xfdesktop-icon-view"

widget "xfwm4-tabwin*" style "murrine-default"

# Invisible toolbar separator
style "murrine-toolseparator" {
	xthickness = 0
  	ythickness = 0

	engine "pixmap" {
		image {
			function	= BOX
			file		= "widgets/Others/null.png"
			border		= { 2, 2, 2, 2 }
			stretch		= TRUE
    		}
 	}
}
#class "GtkSeparatorToolItem" style "murrine-toolseparator"

# Various performance fixes if murrine textstyle is on by default in the theme.
style "performance-fix" = "misc-panel" {engine "murrine" {textstyle = 0}

#bg[ACTIVE]   = shade (0.78, "#109900")  # to be compatible with menus
#	fg[ACTIVE]   = "#000000"#the selected button text color
}
widget_class "*gtkmm__GtkWindow*"	style "performance-fix" # Inkscape
widget_class "*GimpDisplayShell*"	style "performance-fix" # Gimp
widget_class "*GimpToolbox*"		style "performance-fix"
widget_class "*GimpMenuDock*"		style "performance-fix"
widget "*OOoFixed*"			style "performance-fix" # Openoffice/Libreoffice
widget_class "*MozContainer*"		style "performance-fix" # Firefox (Not sure if this one does anything though.)




#include "apps/chromium.rc"	# Chromium styling
#include "apps/pcmanfm.rc"	# PCManFM styling
#include "apps/pluma.rc"		# Pluma styling
#include "widgets/panel.rc"
#include "Styles/caja.rc"
#include "Styles/terminal.rc"
